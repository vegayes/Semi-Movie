<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace = "mypageMapper">


	<resultMap type="Movie" id="movie_rm">
		<id property="movieNo" column="MOVIE_NO"/>
		
		<result property="movieTitle" column="MOVIE_TITLE"/>
		<result property="movieImg" column="MOVIE_IMG"/>
		<result property="movieSummary" column="MOVIE_SUMMARY"/>
		<result property="movieGenre" column="MOVIE_GENRE"/>
		<result property="movieReleaseDate" column="MOVIE_RELEASE_DATE"/>
		<result property="movieAge" column="MOVIE_AGE"/>
		<result property="movieRunningTime" column="MOVIE_RUNNING_TIME"/>
		<result property="movieEnrollDate" column="MOVIE_ENROLL_DATE"/>
		<result property="movieDelYN" column="MOVIE_DEL_YN"/>
		<result property="actorNames" column="ACTOR_NAMES"/>
		<result property="directorNames" column="DIRECTOR_NAMES"/>	
		<result property="sumMovieGrade" column="SUM_MOVIE_GRADE"/>

		<result property="movieLikeEnrollDate" column="MOVIE_LIKE_ENROLL_DATE"/>
		
		<result property="movieCommentNo" column="MOVIE_EV_NO"/>
		<result property="movieCommentContent" column="EVALUATION_CONTENT"/>
		<result property="movieCommentDate" column="MOVIE_EV_ENROLL_DATE"/>
		<result property="movieGrade" column="MOVIE_GRADE"/>

		<result property="commentMovieWriter" column="COMMENT_MOVIE_WRITER"/>
		<result property="visitNo" column="VISIT_NO"/>

	</resultMap>
	
	
		
	<resultMap type="Cinema" id="cinema_rm">
		<id property="cinemaNo" column="CINEMA_NO" />

		<result property="cinemaName" column="CINEMA_NAME" />
		<result property="cinemaAddress" column="CINEMA_ADDRESS" />
		<result property="cinemaContact" column="CINEMA_CONTACT" />
		<result property="cinemaImg" column="CINEMA_IMG" />
		<result property="cinemaLink" column="CINEMA_LINK" />
		<result property="cinemaMaxInclude" column="CINEMA_MAX_INCLUDE" />
		<result property="cinemaDelYN" column="CINEMA_DEL_YN" />
		<result property="cinemaSpecialHall" column="CINEMA_SPECIAL_HALL" />
		<result property="sumCinemaGrade" column="SUM_CINEMA_GRADE"/>
		
		
		<result property="cinemaLikeEnrollDate" column="CINEMA_LIKE_ENROLL_DATE"/>
		
		<result property="cinemaCommentNo" column="CINEMA_EV_NO"/>
		<result property="cinemaCommentContent" column="CINEMA_COMMENT"/>
		<result property="cinemaCommentDate" column="CINEMA_EV_ENROLL_DATE"/>
		<result property="cinemaCommentType" column="EVALUATION_TYPE"/>	
		<result property="cinemaGrade" column="CINEMA_GRADE"/>	

		<result property="cinemaType" column="CINEMA_TYPE" />

	</resultMap>
	
	
	<resultMap type="Member" id="member_rm">
		<id property="memberNo" column="MEMBER_NO" />

		<result property="memberId" column="MEMBER_ID" />
		<result property="memberPw" column="MEMBER_PW" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />
		<result property="memberGender" column="MEMBER_GENDER" />
		<result property="memberProfile" column="MEMBER_PROFILE" />
		<result property="memberEnrollDate" column="MEMBER_ENROLL_DATE" />
		<result property="memberDelYN" column="MEMBER_DEL_YN" />
	</resultMap>
	
	
	<!-- 마이페이지 즐겨찾기 영화 목록 조회  -->
	<select id="selectLikeMovie" resultMap = "movie_rm">
		SELECT MOVIE_NO, MOVIE_TITLE, MOVIE_IMG , TO_CHAR(MOVIE_LIKE_ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') MOVIE_LIKE_ENROLL_DATE
		FROM MOVIE 
		JOIN MOVIE_LIKE USING(MOVIE_NO)
		WHERE MOVIE_LIKE_DEL_YN = 'N' AND MOVIE_LIKE_DEL_YN = 'N'AND MEMBER_NO =#{memberNo}
		ORDER BY MOVIE_LIKE_ENROLL_DATE DESC
	</select>
	
  	<!-- 마이페이지 영화관 즐겨찾기 조회  -->
  	<select id = "selectLikeCinema" resultMap="cinema_rm" >
		SELECT CINEMA_NO, CINEMA_NAME, CINEMA_IMG, TO_CHAR(CINEMA_LIKE_ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') CINEMA_LIKE_ENROLL_DATE
		FROM CINEMA 
		JOIN CINEMA_LIKE USING(CINEMA_NO)
		WHERE CINEMA_LIKE_DEL_YN = 'N' AND CINEMA_LIKE_DEL_YN = 'N'AND MEMBER_NO =#{memberNo}
		ORDER BY CINEMA_LIKE_ENROLL_DATE DESC 	
  	</select>
  	
  	
   	<!-- 마이페이지 영화 댓글 조회  -->
  	<select id = "selectCommentMovie" resultMap="movie_rm" >
		SELECT MOVIE_EV_NO, MOVIE_TITLE, EVALUATION_CONTENT ,  TO_CHAR(MOVIE_EV_ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') MOVIE_EV_ENROLL_DATE, MOVIE_GRADE 
		FROM MOVIE_EVALUATION 
		JOIN MOVIE USING(MOVIE_NO)
		WHERE MOVIE_DEL_YN ='N' AND MOVIE_EV_DEL_YN = 'N' AND MEMBER_NO = #{memberNo}
		ORDER BY MOVIE_EV_ENROLL_DATE DESC
  	</select>	
  	
  	
  	<select id = "selectCommentCinema" resultMap = "cinema_rm">
		SELECT CINEMA_EV_NO , CINEMA_NAME, EVALUATION_TYPE , CINEMA_COMMENT ,  TO_CHAR(CINEMA_EV_ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') CINEMA_EV_ENROLL_DATE, CINEMA_GRADE 
		FROM CINEMA_EVALUATION ce  
		JOIN CINEMA USING(CINEMA_NO)
		WHERE CINEMA_DEL_YN ='N' AND CINEMA_EV_DEL_YN = 'N' AND MEMBER_NO = #{memberNo}
		ORDER BY CINEMA_EV_ENROLL_DATE DESC  	
  	</select>
  	
  	
  	<select id = "checkNickname"  resultType = "_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_DEL_YN  ='N' AND MEMBER_NICKNAME =#{nickname}
  	</select>
  	
  	<update id = "updateProfileImage" >
		UPDATE "MEMBER" SET
		MEMBER_PROFILE = #{memberProfile}
		WHERE MEMBER_NO = #{memberNo}
  	</update>
  	
  	<!-- 회원 정보 수정 -->
	<update id="updateInfo" parameterType="Member">
		UPDATE "MEMBER" SET
		MEMBER_NICKNAME = #{memberNickname},
		MEMEBER_GENDER  = #{memberGender}
		<if test="memberPw != null">,MEMBER_PW = #{memberPw}</if>
		WHERE MEMBER_NO = #{memberNo}
	</update>
  	
  	
  	<!--  영화 댓글 팝업 내용 가져오기 -->
 	<select id = "selectMovieComment" resultMap="movie_rm">
	 	SELECT MOVIE_EV_NO, MOVIE_TITLE, EVALUATION_CONTENT ,  TO_CHAR(MOVIE_EV_ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') MOVIE_EV_ENROLL_DATE, MOVIE_GRADE 
		FROM MOVIE_EVALUATION 
		JOIN MOVIE USING(MOVIE_NO)
		WHERE MOVIE_DEL_YN ='N' AND MOVIE_EV_DEL_YN = 'N' AND MOVIE_EV_NO = #{commentNo}
 	</select>
  	
  	<!-- 영화  댓글 팝업 내용 수정하기 -->
  	<update id = "updateMovieComment">
	  	UPDATE MOVIE_EVALUATION 
		SET EVALUATION_CONTENT = #{movieCommentContent},
		MOVIE_EV_ENROLL_DATE = SYSDATE,
		MOVIE_GRADE  = #{movieGrade}
		WHERE MOVIE_EV_NO = #{movieCommentNo}
  	</update>
  	
  	
  	<!--  영화관 댓글 팝업 내용 가져오기  -->
  	<select id = "selectCinemaComment" resultMap = "cinema_rm">
		SELECT CINEMA_EV_NO , CINEMA_NAME, EVALUATION_TYPE , CINEMA_COMMENT ,  TO_CHAR(CINEMA_EV_ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') CINEMA_EV_ENROLL_DATE, CINEMA_GRADE 
		FROM CINEMA_EVALUATION ce  
		JOIN CINEMA USING(CINEMA_NO)
		WHERE CINEMA_DEL_YN ='N' AND CINEMA_EV_DEL_YN = 'N' AND CINEMA_EV_NO = #{cinemaCommentNo}	
  	</select>
  	
  	<!--  영화관 댓글 팝업 내용 수정하기 -->
  	<update id = "updateCinemaComment">
		UPDATE CINEMA_EVALUATION
		SET CINEMA_COMMENT = #{cinemaCommentContent},
		CINEMA_EV_ENROLL_DATE = SYSDATE,
		CINEMA_GRADE = #{cinemaGrade}
		WHERE CINEMA_EV_NO = #{cinemaCommentNo}
  	</update>
  	
  	
  	<!-- 즐겨찾기 삭제하기 -->
  	<delete id = "delFavoriteMovie">
		 DELETE FROM MOVIE_LIKE 
		 WHERE MOVIE_NO IN
	  	<foreach collection="delMovieNo" item="movieNo" open="(" separator="," close=")">
	   	 #{movieNo}
	 	 </foreach>
	 	 AND  MEMBER_NO = #{memberNo}	
  	</delete>
  	
  	<!--  즐겨찾기 삭제하기 (영화관)  -->
	<delete id = "delFavoriteCinema">
		 DELETE FROM CINEMA_LIKE 
		 WHERE CINEMA_NO IN
	  	<foreach collection="delCinemaNo" item="cinemaNo" open="(" separator="," close=")">
	   	 #{cinemaNo}
	 	 </foreach>
	 	 AND  MEMBER_NO = #{memberNo}	
  	</delete>
  	
  	
  	
  	<!-- 회원 탈퇴하기  -->
  	<update id = "secession">
		 UPDATE "MEMBER" 
		 SET MEMBER_DEL_YN ='Y'
		 WHERE MEMBER_NO = #{memberNo}
  	</update>
  	
  	
  	
  	<!-- 방문기록 -->
  	<!-- 추가 시 있는 지 확인 -->
	<select id = "visitCheck" resultType = "_int">
		SELECT COUNT(*)
		FROM VISIT 
		WHERE MEMBER_NO = #{memberNo} AND MOVIE_NO = #{movieNo}
	</select>  	
  	<!-- 있을 경우 방문 시간만 다시 지정  -->
  	<update id = "visitUpdate" >
	  	UPDATE VISIT SET VISIT_DATE  = SYSDATE 
		WHERE MEMBER_NO = #{memberNo} AND MOVIE_NO = #{movieNo}
  	</update>
  	<!--  방문기록이 없을 경우 추가  -->
  	<insert id = "visitInsert">
	  	INSERT INTO VISIT 
	  	VALUES(SEQ_VISIT_NO.NEXTVAL, #{memberNo}, #{movieNo}, SYSDATE)
  	</insert>
  	<!--  방문기록 조회  -->
  	<select id = "visitMovie" resultMap = "movie_rm">
	  	SELECT MOVIE_NO , MOVIE_TITLE , MOVIE_IMG , MOVIE_SUMMARY ,VISIT_NO
		FROM VISIT
		LEFT JOIN MOVIE USING(MOVIE_NO)
		WHERE MOVIE_DEL_YN ='N' AND MEMBER_NO = #{memberNo}
		ORDER BY VISIT_DATE DESC
  	</select>

	<!--  방문기록 삭제  -->
	<delete id="delVisit">
		 DELETE FROM VISIT 
		 WHERE VISIT_NO = #{visitNo}	
	</delete>
	
	<!-- 댓글 삭제 -->
	<update id = "delCommentMovie">
		UPDATE MOVIE_EVALUATION
		SET MOVIE_EV_DEL_YN ='Y'
		WHERE MOVIE_EV_NO IN
  		<foreach collection="delMovieNo" item="commentNo" open="(" separator="," close=")">
	   	 #{commentNo}
	 	 </foreach>
		 AND MEMBER_NO = #{memberNo} 	
	</update>
	
	
	<update id = "delCommentCinema">
		UPDATE CINEMA_EVALUATION
		SET CINEMA_EV_DEL_YN ='Y'
		WHERE CINEMA_EV_NO IN
  		<foreach collection="delCinemaNo" item="commentNo" open="(" separator="," close=")">
	   	 #{commentNo}
	 	 </foreach>
		 AND MEMBER_NO = #{memberNo} 	
	</update>
	
</mapper>

